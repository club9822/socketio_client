[{"C:\\drive\\club9822\\socketio_client\\src\\index.js":"1","C:\\drive\\club9822\\socketio_client\\src\\App.js":"2","C:\\drive\\club9822\\socketio_client\\src\\reportWebVitals.js":"3","C:\\drive\\club9822\\socketio_client\\src\\utils\\socket.js":"4","C:\\drive\\club9822\\socketio_client\\src\\utils\\cookie.js":"5","C:\\drive\\club9822\\socketio_client\\src\\pages\\login\\index.js":"6","C:\\drive\\club9822\\socketio_client\\src\\pages\\home\\index.js":"7","C:\\drive\\club9822\\socketio_client\\src\\pages\\room\\index.js":"8","C:\\drive\\club9822\\socketio_client\\src\\pages\\pv\\index.js":"9","C:\\drive\\club9822\\socketio_client\\src\\utils\\axios.js":"10","C:\\drive\\club9822\\socketio_client\\src\\pages\\room\\useChat.js":"11"},{"size":545,"mtime":1610788019796,"results":"12","hashOfConfig":"13"},{"size":1466,"mtime":1610788019796,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1610788019796,"results":"15","hashOfConfig":"13"},{"size":1209,"mtime":1610799857723,"results":"16","hashOfConfig":"13"},{"size":960,"mtime":1610788019796,"results":"17","hashOfConfig":"13"},{"size":2620,"mtime":1610788019796,"results":"18","hashOfConfig":"13"},{"size":4036,"mtime":1610788019796,"results":"19","hashOfConfig":"13"},{"size":10045,"mtime":1610799963180,"results":"20","hashOfConfig":"13"},{"size":215,"mtime":1610788019796,"results":"21","hashOfConfig":"13"},{"size":273,"mtime":1610788019796,"results":"22","hashOfConfig":"13"},{"size":1849,"mtime":1610788019796,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xctl31",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"C:\\drive\\club9822\\socketio_client\\src\\index.js",[],["52","53"],"C:\\drive\\club9822\\socketio_client\\src\\App.js",["54","55","56","57","58"],"import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport Home from './pages/home'\r\nimport Login from './pages/login'\r\nimport ChatRoom from './pages/room';\r\nimport Pv from './pages/pv';\r\nimport {io } from \"socket.io-client\";\r\nimport {useEffect, useRef} from \"react\";\r\nimport {SocketUtil} from \"./utils/socket\";\r\nimport {getCookie} from \"./utils/cookie\";\r\nimport {useHistory } from \"react-router-dom\";\r\nfunction App(req) {\r\n  const socketRef = useRef(null);\r\n  useEffect(()=>{\r\n    console.log(socketRef.current)\r\n    if(socketRef.current){\r\n      socketRef.current.on(\"connect\", () => {\r\n        console.log(socketRef.current.id,); // x8WIv7-mJelg7on_ALbx\r\n      });\r\n    }\r\n    // socketRef.current.on(\"disconnect\", () => {\r\n    //   console.log(socket.id); // undefined\r\n    // });\r\n    return ()=>{\r\n      if(socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    }\r\n  },[])\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path={'/login'} component={(props)=><Login {...props} socketRef={socketRef} />} />\r\n        <Route exact path=\"/\" component={(props)=><Home {...props} socketRef={socketRef} />} />\r\n        <Route exact path=\"/:roomId\" component={(props)=><ChatRoom {...props} socketRef={socketRef} />} />\r\n        <Route exact path=\"/pv/:user\" component={(props)=><Pv {...props} socketRef={socketRef} />} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\drive\\club9822\\socketio_client\\src\\reportWebVitals.js",[],"C:\\drive\\club9822\\socketio_client\\src\\utils\\socket.js",[],"C:\\drive\\club9822\\socketio_client\\src\\utils\\cookie.js",[],"C:\\drive\\club9822\\socketio_client\\src\\pages\\login\\index.js",["59","60","61","62"],"import React, {useCallback, useEffect, useState} from 'react'\r\n\r\nimport {Link,useHistory } from \"react-router-dom\";\r\n\r\nimport { Formik } from 'formik';\r\nimport {axios} from '../../utils/axios';\r\nimport {SocketUtil} from \"../../utils/socket\";\r\nimport {setCookie} from \"../../utils/cookie\";\r\n\r\nfunction Page(props) {\r\n  console.log(process.env)\r\n  let history = useHistory();\r\n\r\n  const onLogin=(username,userId)=>{\r\n    return new Promise((resolve, reject) => {\r\n    const {socketRef}=props\r\n     socketRef.current=SocketUtil.init(username);\r\n     setCookie('username',username)\r\n     setCookie('userId',userId)\r\n      console.log(socketRef)\r\n      setTimeout(()=>{\r\n        resolve(true)\r\n      },100)\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ username: '', password: '' }}\r\n        // validate={values => {\r\n        //   const errors = {};\r\n        //   if (!values.username) {\r\n        //     errors.username = 'Required';\r\n        //   }\r\n        //   return errors;\r\n        // }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          axios({\r\n            method:'post',\r\n            url:'auth/login',\r\n            data:{\r\n              username:values.username,\r\n              password:values.password\r\n            }\r\n          }).then(res=>{\r\n            console.log(res.data)\r\n            onLogin(res.data.username,res.data.id).then(r=>{\r\n              history.push(\"/\");\r\n            })\r\n            // history.push(\"/\");\r\n          }).catch(e=>{\r\n\r\n          }).finally(_=>{\r\n            setSubmitting(false);\r\n          })\r\n        }}\r\n      >\r\n        {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            /* and other goodies */\r\n          }) => (\r\n          <form onSubmit={(e)=>{handleSubmit(e);}}>\r\n            <input\r\n              type=\"username\"\r\n              name=\"username\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.username}\r\n            />\r\n            {errors.username && touched.username && errors.username}\r\n            <input\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.password}\r\n            />\r\n            {errors.password && touched.password && errors.password}\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","C:\\drive\\club9822\\socketio_client\\src\\pages\\home\\index.js",["63","64","65","66","67"],"import React, {useCallback, useEffect, useState} from 'react'\r\n\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {axios} from '../../utils/axios';\r\nimport {getCookie} from \"../../utils/cookie\";\r\nimport {SocketUtil} from \"../../utils/socket\";\r\n\r\n\r\nfunction Page(props) {\r\n  const {socketRef} =props\r\n  let history = useHistory();\r\n  // useEffect(()=>{\r\n  //   console.log(props)\r\n  // },[props])\r\n  const [roomName, setRoomName] = React.useState(\"\");\r\n  const [rooms,setRooms]= useState([]);\r\n  const [groups,setGroups]= useState([]);\r\n  const [allUsers,setAllUsers]= useState([]);\r\n  const [newUser,setNewUser]=useState(null)\r\n  const handleRoomNameChange = (event) => {\r\n    setRoomName(event.target.value);\r\n  };\r\n  const getAllUsers= ()=>{\r\n    socketRef.current?.emit('allSockets',(err,sockets)=>{\r\n      // alert(JSON.stringify(sockets))\r\n      console.log('allSockets:',err,sockets)\r\n      if(sockets&&Array.isArray(sockets)) {\r\n        setAllUsers(sockets)\r\n      }\r\n    })\r\n  }\r\n  const getAllRooms= ()=>{\r\n    socketRef.current?.emit('allRooms',(err,sockets)=>{\r\n      // alert(JSON.stringify(sockets))\r\n      console.log('getAllRooms',err,sockets)\r\n      if(sockets&&Array.isArray(sockets)){\r\n        setRooms(sockets)\r\n      }\r\n\r\n    })\r\n  }\r\n  useEffect(()=>{\r\n    if(socketRef){\r\n      console.log('socketRef.current',socketRef)\r\n      getAllRooms()\r\n      socketRef.current?.on('join',(e)=>{\r\n        alert('join')\r\n        getAllUsers()\r\n        getAllRooms()\r\n      })\r\n      //  socketRef?.current.on('connect',(msg)=>{\r\n      //    console.log(msg)\r\n      //    setNewUser(msg)\r\n      //   setTimeout(()=>{\r\n      //     setNewUser(null)\r\n      //   },3000)\r\n      // })\r\n      getAllUsers()\r\n\r\n    }\r\n  },[socketRef,socketRef.current])\r\n  const joinToGroup=(roomId,username)=>{\r\n    socketRef.current.emit('joinRoom',{roomId:roomId,username:username,socketId:String(socketRef?.current?.id)},(e)=>{\r\n    })\r\n  }\r\n  const getAllGroups= async ()=>{\r\n    try{\r\n      const response= await axios({method:'get',url:'db/group',})\r\n      console.log(response)\r\n      setGroups(response.data)\r\n    }catch (e){\r\n      console.log(e)\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    getAllGroups()\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    const username= getCookie('username')\r\n    if(username){\r\n      socketRef.current=SocketUtil.init(username)\r\n    }else {\r\n      history.push('/login')\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {getCookie('username')||''}\r\n      </h1>\r\n      <p>\r\n        all rooms : include users\r\n      </p>\r\n      <div style={{flexDirection:'column',display:'flex'}}>\r\n      {\r\n        rooms.map(room=>{\r\n          return (<Link to={{pathname:`/${room}`,search:'?userId=sss'}} className=\"enter-room-button\" key={room}>room: {room||''}</Link>)\r\n        })\r\n      }\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Room\"\r\n        value={roomName}\r\n        onChange={handleRoomNameChange}\r\n        className=\"text-input-field\"\r\n      />\r\n      <Link to={{pathname:`/${roomName}`,search:'?userId=sss'}} className=\"enter-room-button\">\r\n        Create New room\r\n      </Link>\r\n\r\n      <hr />\r\n      <p>\r\n        groups\r\n      </p>\r\n      <div style={{flexDirection:'column',display:'flex'}}>\r\n        {\r\n          groups&&Array.isArray(groups)?groups.map(group=>{\r\n            return (<Link to={{pathname:`/${group?.id}`,search:'?userId=x'}} className=\"enter-room-button\" key={group.id} onClick={()=>{\r\n\r\n            }}> {group.name||''}</Link>)\r\n          }):null\r\n        }\r\n      </div>\r\n      <div style={{position:'absolute',right:0,top:0,backgroundColor:'#e1f1ed',flexDirection:'column',display:'flex'}}>\r\n        <h1>All Online users</h1>\r\n        <div>\r\n          {newUser?newUser?.message:''}\r\n        </div>\r\n        {\r\n          allUsers.map(user=>(<Link key={user+'_'} to={{pathname:`/${user}`,search:'?userId=sss'}} className=\"enter-room-button\">\r\n            {user||''}\r\n          </Link>))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","C:\\drive\\club9822\\socketio_client\\src\\pages\\room\\index.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"C:\\drive\\club9822\\socketio_client\\src\\pages\\pv\\index.js",[],"C:\\drive\\club9822\\socketio_client\\src\\utils\\axios.js",["87"],"import axios from 'axios';\r\nimport {getCookie} from \"./cookie\";\r\n// const a = getCookie('token')\r\naxios.defaults.baseURL=process.env.REACT_APP_BASE_API\r\n// axios.defaults.headers={'cookie':'token='+getCookie('token')}\r\naxios.defaults.withCredentials=true;\r\nexport {axios}\r\n","C:\\drive\\club9822\\socketio_client\\src\\pages\\room\\useChat.js",["88","89","90","91","92"],"import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport {axios} from \"../../utils/axios\";\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"message\"; // Name of the event\r\n// const SOCKET_SERVER_URL = process.env.SOCKET_SERVER_URL;\r\nconst SOCKET_SERVER_URL = 'http://localhost:4000';\r\n// console.log(process.env)\r\nconst useChat = (roomId,socketRef) => {\r\n  const [messages, setMessages] = useState([]); // Sent and received messages\r\n\r\n  useEffect(() => {\r\n    // Creates a WebSocket connection\r\n    // socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n    //   query: { roomId:roomId,userId:userId},\r\n    //   path:'.'\r\n    // });\r\n    // socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n    //   query: { roomId:roomId,userId:userId},\r\n    //   path:'.'\r\n    // });\r\n    // socketRef.current.emit(\"joinRoom\",{roomId:roomId,userId:userId})\r\n\r\n    // console.log('socketRef::::',socketRef.current)\r\n    // Listens for incoming messages\r\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n      // console.log('log:::::message',message)\r\n      const incomingMessage = {\r\n        ...message,\r\n        ownedByCurrentUser: message.userId === socketRef.current.id,\r\n      };\r\n      setMessages((messages) => [...messages, incomingMessage]);\r\n    });\r\n  }, [roomId]);\r\n\r\n  // Sends a message to the server that\r\n  // forwards it to all users in the same room\r\n  const sendMessage = (messageBody) => {\r\n\r\n  };\r\n  const sendMessageToApi=(messageBody)=>{\r\n    axios({\r\n      method:'post',\r\n      url:'/db/message/create',\r\n      data:{\r\n        status:'active',\r\n        text:messageBody,\r\n        type:'text',\r\n        groupId:roomId\r\n      }\r\n    }).then(res=>{\r\n    }).catch(e=>{\r\n\r\n    }).finally(_=>{\r\n    })\r\n  }\r\n\r\n  return { messages, sendMessage };\r\n};\r\n\r\nexport default useChat;\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":7,"column":9,"nodeType":"99","messageId":"100","endLine":7,"endColumn":11},{"ruleId":"97","severity":1,"message":"101","line":9,"column":9,"nodeType":"99","messageId":"100","endLine":9,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":10,"column":9,"nodeType":"99","messageId":"100","endLine":10,"endColumn":18},{"ruleId":"97","severity":1,"message":"103","line":11,"column":9,"nodeType":"99","messageId":"100","endLine":11,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":26,"column":19,"nodeType":"99","endLine":26,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":27},{"ruleId":"97","severity":1,"message":"107","line":1,"column":29,"nodeType":"99","messageId":"100","endLine":1,"endColumn":38},{"ruleId":"97","severity":1,"message":"108","line":1,"column":40,"nodeType":"99","messageId":"100","endLine":1,"endColumn":48},{"ruleId":"97","severity":1,"message":"109","line":3,"column":9,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"97","severity":1,"message":"106","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":27},{"ruleId":"97","severity":1,"message":"110","line":19,"column":18,"nodeType":"99","messageId":"100","endLine":19,"endColumn":28},{"ruleId":"104","severity":1,"message":"111","line":61,"column":5,"nodeType":"112","endLine":61,"endColumn":34,"suggestions":"113"},{"ruleId":"97","severity":1,"message":"114","line":62,"column":9,"nodeType":"99","messageId":"100","endLine":62,"endColumn":20},{"ruleId":"104","severity":1,"message":"115","line":86,"column":5,"nodeType":"112","endLine":86,"endColumn":7,"suggestions":"116"},{"ruleId":"97","severity":1,"message":"107","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"108","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"109","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"117","line":3,"column":21,"nodeType":"99","messageId":"100","endLine":3,"endColumn":30},{"ruleId":"97","severity":1,"message":"118","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"119","line":8,"column":3,"nodeType":"99","messageId":"100","endLine":8,"endColumn":11},{"ruleId":"97","severity":1,"message":"120","line":10,"column":3,"nodeType":"99","messageId":"100","endLine":10,"endColumn":16},{"ruleId":"97","severity":1,"message":"121","line":14,"column":3,"nodeType":"99","messageId":"100","endLine":14,"endColumn":9},{"ruleId":"97","severity":1,"message":"122","line":15,"column":3,"nodeType":"99","messageId":"100","endLine":15,"endColumn":9},{"ruleId":"97","severity":1,"message":"123","line":16,"column":3,"nodeType":"99","messageId":"100","endLine":16,"endColumn":10},{"ruleId":"97","severity":1,"message":"124","line":19,"column":3,"nodeType":"99","messageId":"100","endLine":19,"endColumn":14},{"ruleId":"97","severity":1,"message":"125","line":22,"column":3,"nodeType":"99","messageId":"100","endLine":22,"endColumn":11},{"ruleId":"97","severity":1,"message":"126","line":23,"column":3,"nodeType":"99","messageId":"100","endLine":23,"endColumn":13},{"ruleId":"97","severity":1,"message":"127","line":24,"column":3,"nodeType":"99","messageId":"100","endLine":24,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":54,"column":5,"nodeType":"130","messageId":"131","endLine":54,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":68,"column":11,"nodeType":"132","messageId":"131","endLine":75,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":132,"column":7,"nodeType":"133","messageId":"131","endLine":149,"endColumn":8},{"ruleId":"128","severity":1,"message":"129","line":154,"column":7,"nodeType":"133","messageId":"131","endLine":171,"endColumn":8},{"ruleId":"97","severity":1,"message":"134","line":230,"column":13,"nodeType":"99","messageId":"100","endLine":230,"endColumn":22},{"ruleId":"97","severity":1,"message":"102","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"135","line":1,"column":21,"nodeType":"99","messageId":"100","endLine":1,"endColumn":27},{"ruleId":"97","severity":1,"message":"136","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"137","line":7,"column":7,"nodeType":"99","messageId":"100","endLine":7,"endColumn":24},{"ruleId":"104","severity":1,"message":"138","line":34,"column":6,"nodeType":"112","endLine":34,"endColumn":14,"suggestions":"139"},{"ruleId":"97","severity":1,"message":"140","line":41,"column":9,"nodeType":"99","messageId":"100","endLine":41,"endColumn":25},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'SocketUtil' is defined but never used.","'getCookie' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'socketRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'socketRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'setNewUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllRooms' and 'getAllUsers'. Either include them or remove the dependency array. Mutable values like 'socketRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["143"],"'joinToGroup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'socketRef'. Either include them or remove the dependency array.",["144"],"'setCookie' is defined but never used.","'MessageBox' is defined but never used.","'ChatItem' is defined but never used.","'SystemMessage' is defined but never used.","'Avatar' is defined but never used.","'Navbar' is defined but never used.","'SideBar' is defined but never used.","'MeetingList' is defined but never used.","'FaSearch' is defined but never used.","'FaComments' is defined but never used.","'FaWindowClose' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","ExpressionStatement","VariableDeclaration","'socketRef' is assigned a value but never used.","'useRef' is defined but never used.","'socketIOClient' is defined but never used.","'SOCKET_SERVER_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socketRef'. Either include it or remove the dependency array.",["145"],"'sendMessageToApi' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [getAllRooms, getAllUsers, socketRef]",{"range":"152","text":"153"},"Update the dependencies array to be: [history, socketRef]",{"range":"154","text":"155"},"Update the dependencies array to be: [roomId, socketRef]",{"range":"156","text":"157"},[1735,1764],"[getAllRooms, getAllUsers, socketRef]",[2402,2404],"[history, socketRef]",[1318,1326],"[roomId, socketRef]"]